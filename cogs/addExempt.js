const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { ADMIN_ROLES, LOG_CHANNEL } = require('../apikeys');
const { getSubscribersDb } = require('../utils/database');
const noblox = require('noblox.js');
const { EXEMPT_ROLE_IDS } = require('./exemptRoles'); // –µ—Å–ª–∏ –æ–±–∞ –≤ cogs, –∏—Å–ø–æ–ª—å–∑—É–µ–º ./

async function getRobloxId(username) {
    if (!username || typeof username !== 'string' || username.length === 0) return null;
    try {
        const userId = await noblox.getIdFromUsername(username);
        return userId || null;
    } catch (e) {
        console.error("getRobloxId error:", e);
        return null;
    }
}

module.exports = {
    data: new SlashCommandBuilder()
        .setName('–¥–æ–±–∞–≤–∏—Ç—å_–∏—Å–∫–ª—é—á–µ–Ω–∏–µ')
        .setDescription('–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –∏—Å–∫–ª—é—á–µ–Ω–∏–π (–ø–æ —Ä–æ–ª—è–º)')
        .addUserOption(option =>
            option.setName('–¥–∏—Å–∫–æ—Ä–¥')
                .setDescription('Discord –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                .setRequired(true)
        )
        .addStringOption(option =>
            option.setName('–Ω–∏–∫_roblox')
                .setDescription('Roblox –Ω–∏–∫–Ω–µ–π–º')
                .setRequired(true)
        ),
    async execute(interaction) {
        if (!interaction.member.roles.cache.some(role => ADMIN_ROLES.includes(role.id))) {
            return interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder().setDescription('‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!').setColor(0xF31F1F)]
            });
        }

        const user = interaction.options.getUser('–¥–∏—Å–∫–æ—Ä–¥');
        const robloxUsername = interaction.options.getString('–Ω–∏–∫_roblox');

        // –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        let member;
        try {
            member = await interaction.guild.members.fetch(user.id);
        } catch {
            return interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder().setDescription('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.').setColor(0xF31F1F)]
            });
        }

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ EXEMPT_ROLE_IDS
        const userExemptRoles = member.roles.cache.filter(r => EXEMPT_ROLE_IDS.includes(r.id));
        if (userExemptRoles.size === 0) {
            return interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder().setDescription(`‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${user.id}> –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Ä–æ–ª–∏-–∏—Å–∫–ª—é—á–µ–Ω–∏—è.`).setColor(0xF31F1F)]
            });
        }

        // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–æ–ª–µ–π ‚Äî –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –ø–µ—Ä–≤—É—é, –ª–∏–±–æ —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä —á–µ—Ä–µ–∑ select menu (—É–ø—Ä–æ—â—ë–Ω–Ω–æ ‚Äî –±–µ—Ä–µ–º –ø–µ—Ä–≤—É—é)
        const exemptRole = userExemptRoles.first();
        const roleId = exemptRole.id;

        const db = getSubscribersDb();
        db.get("SELECT * FROM subscribers WHERE discord_id = ? AND exempt_role_id = ?", [user.id, roleId], (err, row) => {
            if (row) {
                interaction.reply({
                    ephemeral: true,
                    embeds: [new EmbedBuilder().setDescription(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${user.id}> —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —Å —Ä–æ–ª—å—é <@&${roleId}>.`).setColor(0xF31F1F)]
                });
                db.close();
                return;
            }

            getRobloxId(robloxUsername).then(robloxId => {
                const robloxProfile = robloxId
                    ? `[${robloxUsername}](https://www.roblox.com/users/${robloxId}/profile)`
                    : robloxUsername;

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –ø–æ discord_id (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫ –∏–ª–∏ –±—É—Å—Ç–µ—Ä)
                db.get("SELECT * FROM subscribers WHERE discord_id = ?", [user.id], (err2, row2) => {
                    if (row2) {
                        // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ exempt_role_id
                        db.run(
                            "UPDATE subscribers SET status = 'exempt', exempt_role_id = ?, booster = 0, subscription_days = 0 WHERE discord_id = ?",
                            [roleId, user.id],
                            async err3 => {
                                db.close();
                                if (err3) return interaction.reply({ ephemeral: true, embeds: [new EmbedBuilder().setDescription(`‚ùå –û—à–∏–±–∫–∞: ${err3.message}`).setColor(0xF31F1F)] });

                                await interaction.reply({
                                    embeds: [new EmbedBuilder().setTitle('‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!').setDescription(
                                        `**Discord:** <@${user.id}>\n**Roblox:** ${robloxProfile}\n**–ò—Å–∫–ª—é—á–∞—é—â–∞—è —Ä–æ–ª—å:** <@&${roleId}>`
                                    ).setColor(0xCC2641)]
                                });

                                const logEmbed = new EmbedBuilder()
                                    .setTitle('üìã –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ')
                                    .setColor(0xCC2641)
                                    .addFields(
                                        { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value: `<@${interaction.user.id}>` },
                                        { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `<@${user.id}>` },
                                        { name: 'Roblox –Ω–∏–∫', value: robloxProfile },
                                        { name: '–†–æ–ª—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è', value: `<@&${roleId}>` }
                                    );
                                if (LOG_CHANNEL) {
                                    const channel = interaction.guild.channels.cache.get(LOG_CHANNEL);
                                    if (channel) channel.send({ embeds: [logEmbed] });
                                }
                            }
                        );
                    } else {
                        // –ï—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é
                        db.run(
                            "INSERT INTO subscribers (discord_id, roblox_username, exempt_role_id, status, booster, subscription_days) VALUES (?, ?, ?, 'exempt', 0, 0)",
                            [user.id, robloxUsername, roleId],
                            async err3 => {
                                db.close();
                                if (err3) return interaction.reply({ ephemeral: true, embeds: [new EmbedBuilder().setDescription(`‚ùå –û—à–∏–±–∫–∞: ${err3.message}`).setColor(0xF31F1F)] });

                                await interaction.reply({
                                    embeds: [new EmbedBuilder().setTitle('‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!').setDescription(
                                        `**Discord:** <@${user.id}>\n**Roblox:** ${robloxProfile}\n**–ò—Å–∫–ª—é—á–∞—é—â–∞—è —Ä–æ–ª—å:** <@&${roleId}>`
                                    ).setColor(0xCC2641)]
                                });

                                const logEmbed = new EmbedBuilder()
                                    .setTitle('üìã –î–æ–±–∞–≤–ª–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ')
                                    .setColor(0xCC2641)
                                    .addFields(
                                        { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value: `<@${interaction.user.id}>` },
                                        { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `<@${user.id}>` },
                                        { name: 'Roblox –Ω–∏–∫', value: robloxProfile },
                                        { name: '–†–æ–ª—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è', value: `<@&${roleId}>` }
                                    );
                                if (LOG_CHANNEL) {
                                    const channel = interaction.guild.channels.cache.get(LOG_CHANNEL);
                                    if (channel) channel.send({ embeds: [logEmbed] });
                                }
                            }
                        );
                    }
                });
            });
        });
    }
};