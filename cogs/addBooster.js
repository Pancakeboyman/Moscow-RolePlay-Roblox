const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { getSubscribersDb } = require('../utils/database');
const { ADMIN_ROLES, LOG_CHANNEL } = require('../apikeys');
const noblox = require('noblox.js');

const BOOSTER_ROLE_ID = "1364498859933438073";

// –ü–æ–ª—É—á–∏—Ç—å userId –ø–æ –Ω–∏–∫–Ω–µ–π–º—É —á–µ—Ä–µ–∑ noblox.js (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ)
async function getRobloxId(username) {
    try {
        const users = await noblox.searchUsers(username, 1, "");
        if (Array.isArray(users) && users.length > 0 && users[0].username.toLowerCase() === username.toLowerCase())
            return users[0].userId;
        return null;
    } catch (e) {
        if (e.message && e.message.includes("429")) return [];
        console.error("Autocomplete error:", e);
        return null;
    }
}

// –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ –±—É—Å—Ç–µ—Ä–∞ –∏–∑ –±–∞–∑—ã –µ—Å–ª–∏ —Ä–æ–ª—å —Å–Ω—è—Ç–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª
function setupBoosterWatcher(client) {
    client.on('guildMemberUpdate', async (oldMember, newMember) => {
        // –ï—Å–ª–∏ —Ä–æ–ª—å –±—É—Å—Ç–µ—Ä–∞ —É–±—Ä–∞–ª–∏
        if (oldMember.roles.cache.has(BOOSTER_ROLE_ID) && !newMember.roles.cache.has(BOOSTER_ROLE_ID)) {
            const db = getSubscribersDb();
            db.run("UPDATE subscribers SET booster = 0 WHERE discord_id = ?", [newMember.id], (err) => {
                db.close();
                if (err) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—É—Å—Ç–µ—Ä–∞ –≤ –±–∞–∑–µ: ${err.message}`);
                } else {
                    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${newMember.id} –æ–±–Ω–æ–≤–ª—ë–Ω –≤ –±–∞–∑–µ (—Å–Ω—è—Ç–∞ —Ä–æ–ª—å –±—É—Å—Ç–µ—Ä–∞).`);
                }
            });
        }
    });

    client.on('guildMemberRemove', async (member) => {
        const db = getSubscribersDb();
        db.run("UPDATE subscribers SET booster = 0 WHERE discord_id = ?", [member.id], (err) => {
            db.close();
            if (err) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—É—Å—Ç–µ—Ä–∞ –≤ –±–∞–∑–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ: ${err.message}`);
            } else {
                console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${member.id} –æ–±–Ω–æ–≤–ª—ë–Ω –≤ –±–∞–∑–µ (–≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞, —Å–Ω—è—Ç–∞ —Ä–æ–ª—å –±—É—Å—Ç–µ—Ä–∞).`);
            }
        });
    });
}

module.exports = {
    data: new SlashCommandBuilder()
        .setName('–¥–æ–±–∞–≤–∏—Ç—å_–±—É—Å—Ç–µ—Ä–∞')
        .setDescription('–î–æ–±–∞–≤–∏—Ç—å –±—É—Å—Ç–µ—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö')
        .addUserOption(option => option.setName('–¥–∏—Å–∫–æ—Ä–¥').setDescription('Discord –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å').setRequired(true))
        .addStringOption(option =>
            option.setName('–Ω–∏–∫_roblox')
                .setDescription('–ù–∏–∫–Ω–µ–π–º Roblox')
                .setRequired(true)
                .setAutocomplete(true)
        ),
    async autocomplete(interaction) {
        const focusedValue = interaction.options.getFocused();
        if (!focusedValue || typeof focusedValue !== 'string' || focusedValue.length < 3) {
            return interaction.respond([
                { name: "–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞", value: "none" }
            ]);
        }
        try {
            const users = await noblox.searchUsers(focusedValue, 20, "");
            if (!Array.isArray(users) || users.length === 0) {
                return interaction.respond([
                    { name: "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", value: "none" }
                ]);
            }
            const res = users
                .filter(user => user.username)
                .map(user => ({
                    name: `${user.username} (${user.userId})`,
                    value: user.username
                }));
            if (res.length === 0) {
                return interaction.respond([
                    { name: "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", value: "none" }
                ]);
            }
            await interaction.respond(res);
        } catch (e) {
            if (e.message && e.message.includes("429")) {
                return interaction.respond([
                    { name: "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ", value: "none" }
                ]);
            }
            console.error("Autocomplete error:", e);
            await interaction.respond([
                { name: "–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞", value: "none" }
            ]);
        }
    },
    async execute(interaction) {
        if (!interaction.member.roles.cache.some(role => ADMIN_ROLES.includes(role.id))) {
            return interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder().setTitle('‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ').setDescription('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!').setColor(0xF31F1F)]
            });
        }
        const user = interaction.options.getUser('–¥–∏—Å–∫–æ—Ä–¥');
        const robloxUsername = interaction.options.getString('–Ω–∏–∫_roblox');

        const robloxId = await getRobloxId(robloxUsername);

        let member = await interaction.guild.members.fetch(user.id).catch(() => null);
        let hasBoosterRole = member && member.roles.cache.has(BOOSTER_ROLE_ID);

        if (!hasBoosterRole) {
            return interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder().setTitle('‚ùå –ù–µ —è–≤–ª—è–µ—Ç—Å—è –±—É—Å—Ç–µ—Ä–æ–º').setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${user.id}> –Ω–µ –∏–º–µ–µ—Ç —Ä–æ–ª–∏ –±—É—Å—Ç–µ—Ä–∞ (<@&${BOOSTER_ROLE_ID}>).`).setColor(0xF31F1F)]
            });
        }

        const db = getSubscribersDb();
        db.get("SELECT * FROM subscribers WHERE discord_id = ?", [user.id], (err, row) => {
            if (row) {
                // –£–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–∏–º booster = 1 –∏ roblox_username
                db.run(
                    "UPDATE subscribers SET booster = 1, roblox_username = ? WHERE discord_id = ?",
                    [robloxUsername, user.id],
                    async (err) => {
                        db.close();
                        if (err) {
                            return interaction.reply({
                                ephemeral: true,
                                embeds: [new EmbedBuilder().setTitle('‚ùå –û—à–∏–±–∫–∞').setDescription(err.message).setColor(0xF31F1F)]
                            });
                        }

                        const robloxProfile = robloxId
                            ? `[${robloxUsername}](https://www.roblox.com/users/${robloxId}/profile)`
                            : robloxUsername;

                        await interaction.reply({
                            embeds: [
                                new EmbedBuilder()
                                    .setTitle('‚úÖ –ë—É—Å—Ç–µ—Ä –æ–±–Ω–æ–≤–ª—ë–Ω!')
                                    .setDescription(
                                        `**Discord:** <@${user.id}>\n**Roblox:** ${robloxProfile}\n**–°—Ç–∞—Ç—É—Å:** –ë—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ (—Ä–æ–ª—å –∏–º–µ–µ—Ç—Å—è)\n\n–ë—É—Å—Ç–µ—Ä —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –ø–æ–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ä–æ–ª—å –±—É—Å—Ç–µ—Ä–∞.`
                                    )
                                    .setColor(0xCC2641)
                            ]
                        });

                        // EMBED –î–õ–Ø –õ–û–ì–û–í
                        const logEmbed = new EmbedBuilder()
                            .setTitle('üìù –ë—É—Å—Ç–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω/–æ–±–Ω–æ–≤–ª—ë–Ω')
                            .setColor(0xCC2641)
                            .addFields(
                                { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value: `<@${interaction.user.id}>`, inline: true },
                                { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `<@${user.id}>`, inline: true },
                                { name: 'Roblox –Ω–∏–∫', value: robloxProfile, inline: true },
                                { name: '–°—Ç–∞—Ç—É—Å', value: '–ë—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ (—Ä–æ–ª—å –∏–º–µ–µ—Ç—Å—è)', inline: true }
                            )
                            .setFooter({ text: "Moscow RolePlay | ER:LC Booster System" })
                            .setTimestamp();

                        if (LOG_CHANNEL) {
                            const channel = interaction.guild.channels.cache.get(LOG_CHANNEL);
                            if (channel) channel.send({ embeds: [logEmbed] });
                        }

                        // EMBED –î–õ–Ø –õ–ò–ß–ö–ò
                        await user.send({
                            embeds: [
                                new EmbedBuilder()
                                    .setTitle('‚ú® –¢–µ–ø–µ—Ä—å –≤—ã –±—É—Å—Ç–µ—Ä!')
                                    .setDescription(`**–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!** –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞—Ç—É—Å –±—É—Å—Ç–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Moscow RolePlay.\n`)
                                    .addFields(
                                        { name: '–í–∞—à Discord', value: `<@${user.id}>`, inline: true },
                                        { name: '–í–∞—à Roblox', value: robloxProfile, inline: true },
                                        { name: 'üåü –í–∞—à–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏', value: '‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤ <#1342209500572029059>).\n‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∏ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ –±–æ–Ω—É—Å—ã\n‚Ä¢ –ü—Ä—è–º—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏—è—Ö —Å–µ—Ä–≤–µ—Ä–∞', inline: false },
                                        { name: '–í–∞–∂–Ω–æ', value: '–°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏ –±—É—Å—Ç–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.', inline: false }
                                    )
                                    .setColor(0xCC2641)
                                    .setFooter({ text: "Moscow RolePlay Roblox | –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!" })
                                    .setTimestamp()
                            ]
                        }).catch(() => {});
                    }
                );
            } else {
                // –ù–µ—Ç –≤ –±–∞–∑–µ ‚Äî –¥–æ–±–∞–≤–∏–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
                db.run(
                    "INSERT INTO subscribers (discord_id, roblox_username, subscription_days, expires_at, status, booster) VALUES (?, ?, ?, ?, ?, ?)",
                    [user.id, robloxUsername, 0, null, null, 1],
                    async err => {
                        db.close();
                        if (err) {
                            return interaction.reply({
                                ephemeral: true,
                                embeds: [new EmbedBuilder().setTitle('‚ùå –û—à–∏–±–∫–∞').setDescription(err.message).setColor(0xF31F1F)]
                            });
                        }

                        const robloxProfile = robloxId
                            ? `[${robloxUsername}](https://www.roblox.com/users/${robloxId}/profile)`
                            : robloxUsername;

                        await interaction.reply({
                            embeds: [
                                new EmbedBuilder()
                                    .setTitle('‚úÖ –ë—É—Å—Ç–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω!')
                                    .setDescription(
                                        `**Discord:** <@${user.id}>\n**Roblox:** ${robloxProfile}\n**–°—Ç–∞—Ç—É—Å:** –ë—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ (—Ä–æ–ª—å –∏–º–µ–µ—Ç—Å—è)\n\n–ë—É—Å—Ç–µ—Ä —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è, –ø–æ–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ä–æ–ª—å –±—É—Å—Ç–µ—Ä–∞.`
                                    )
                                    .setColor(0xCC2641)
                            ]
                        });

                        // EMBED –î–õ–Ø –õ–û–ì–û–í
                        const logEmbed = new EmbedBuilder()
                            .setTitle('üìù –ë—É—Å—Ç–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω')
                            .setColor(0xCC2641)
                            .addFields(
                                { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value: `<@${interaction.user.id}>`, inline: true },
                                { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `<@${user.id}>`, inline: true },
                                { name: 'Roblox –Ω–∏–∫', value: robloxProfile, inline: true },
                                { name: '–°—Ç–∞—Ç—É—Å', value: '–ë—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞ (—Ä–æ–ª—å –∏–º–µ–µ—Ç—Å—è)', inline: true }
                            )
                            .setFooter({ text: "Moscow RolePlay | ER:LC Booster System" })
                            .setTimestamp();

                        if (LOG_CHANNEL) {
                            const channel = interaction.guild.channels.cache.get(LOG_CHANNEL);
                            if (channel) channel.send({ embeds: [logEmbed] });
                        }

                        // EMBED –î–õ–Ø –õ–ò–ß–ö–ò
                        await user.send({
                            embeds: [
                                new EmbedBuilder()
                                    .setTitle('‚ú® –¢–µ–ø–µ—Ä—å –≤—ã –±—É—Å—Ç–µ—Ä!')
                                    .setDescription(`**–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!** –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞—Ç—É—Å –±—É—Å—Ç–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Moscow RolePlay.\n`)
                                    .addFields(
                                        { name: '–í–∞—à Discord', value: `<@${user.id}>`, inline: true },
                                        { name: '–í–∞—à Roblox', value: robloxProfile, inline: true },
                                        { name: 'üåü –í–∞—à–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏', value: '‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤ <#1342209500572029059>).\n‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã –∏ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã–µ –±–æ–Ω—É—Å—ã\n‚Ä¢ –ü—Ä—è–º—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–æ–±—ã—Ç–∏—è—Ö —Å–µ—Ä–≤–µ—Ä–∞', inline: false },
                                        { name: '–í–∞–∂–Ω–æ', value: '–°—Ç–∞—Ç—É—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–æ–ª–∏ –±—É—Å—Ç–µ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.', inline: false }
                                    )
                                    .setColor(0xCC2641)
                                    .setFooter({ text: "Moscow RolePlay Roblox | –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É!" })
                                    .setTimestamp()
                            ]
                        }).catch(() => {});
                    }
                );
            }
        });
    },
    setupBoosterWatcher // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏—è –±—É—Å—Ç–µ—Ä–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ —Ä–æ–ª–∏
};