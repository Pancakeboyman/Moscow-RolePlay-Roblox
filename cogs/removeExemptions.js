const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { ADMIN_ROLES, LOG_CHANNEL } = require('../apikeys');
const { getSubscribersDb } = require('../utils/database');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('—É–±—Ä–∞—Ç—å_–∏—Å–∫–ª—é—á–µ–Ω–∏–µ')
        .setDescription('–£–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –∏—Å–∫–ª—é—á–µ–Ω–∏–π')
        .addUserOption(option =>
            option.setName('–¥–∏—Å–∫–æ—Ä–¥')
                .setDescription('Discord –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
                .setRequired(true)
        )
        .addStringOption(option =>
            option.setName('—Ä–æ–ª—å')
                .setDescription('ID –∏—Å–∫–ª—é—á–∞—é—â–µ–π —Ä–æ–ª–∏')
                .setRequired(true)
        ),
    async execute(interaction) {
        if (!interaction.member.roles.cache.some(role => ADMIN_ROLES.includes(role.id))) {
            return interaction.reply({
                ephemeral: true,
                embeds: [new EmbedBuilder().setDescription('‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!').setColor(0xF31F1F)]
            });
        }

        const user = interaction.options.getUser('–¥–∏—Å–∫–æ—Ä–¥');
        const roleId = interaction.options.getString('—Ä–æ–ª—å');

        const db = getSubscribersDb();
        db.get("SELECT * FROM subscribers WHERE discord_id = ? AND exempt_role_id = ? AND status = 'exempt'", [user.id, roleId], (err, row) => {
            if (!row) {
                db.close();
                return interaction.reply({
                    ephemeral: true,
                    embeds: [new EmbedBuilder().setDescription(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${user.id}> –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π —Å —Ä–æ–ª—å—é <@&${roleId}>.`).setColor(0xF31F1F)]
                });
            }

            db.run("DELETE FROM subscribers WHERE discord_id = ? AND exempt_role_id = ? AND status = 'exempt'", [user.id, roleId], async err => {
                db.close();
                if (err) {
                    return interaction.reply({
                        ephemeral: true,
                        embeds: [new EmbedBuilder().setDescription(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`).setColor(0xF31F1F)]
                    });
                }

                await interaction.reply({
                    embeds: [
                        new EmbedBuilder()
                            .setTitle('‚úÖ –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ')
                            .setDescription(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@${user.id}> –±–æ–ª—å—à–µ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–∞–∑–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –ø–æ —Ä–æ–ª–∏ <@&${roleId}>.`)
                            .setColor(0xCC2641)
                    ],
                    ephemeral: false
                });

                // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
                const logEmbed = new EmbedBuilder()
                    .setTitle('üóëÔ∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ')
                    .setColor(0xCC2641)
                    .addFields(
                        { name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value: `<@${interaction.user.id}>` },
                        { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `<@${user.id}>` },
                        { name: '–†–æ–ª—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è', value: `<@&${roleId}>` }
                    );
                if (LOG_CHANNEL) {
                    const channel = interaction.guild.channels.cache.get(LOG_CHANNEL);
                    if (channel) channel.send({ embeds: [logEmbed] });
                }
            });
        });
    }
};